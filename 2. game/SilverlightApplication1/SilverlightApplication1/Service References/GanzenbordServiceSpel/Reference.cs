//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace SilverlightApplication1.GanzenbordServiceSpel {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/SilverlightApplication1.Web.DTO")]
    public partial class Player : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int GewonnenField;
        
        private string LobbyField;
        
        private int LocatieField;
        
        private int PlayerIdField;
        
        private string PlayerNaamField;
        
        private int VerlorenField;
        
        private string WachtwoordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gewonnen {
            get {
                return this.GewonnenField;
            }
            set {
                if ((this.GewonnenField.Equals(value) != true)) {
                    this.GewonnenField = value;
                    this.RaisePropertyChanged("Gewonnen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lobby {
            get {
                return this.LobbyField;
            }
            set {
                if ((object.ReferenceEquals(this.LobbyField, value) != true)) {
                    this.LobbyField = value;
                    this.RaisePropertyChanged("Lobby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Locatie {
            get {
                return this.LocatieField;
            }
            set {
                if ((this.LocatieField.Equals(value) != true)) {
                    this.LocatieField = value;
                    this.RaisePropertyChanged("Locatie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerId {
            get {
                return this.PlayerIdField;
            }
            set {
                if ((this.PlayerIdField.Equals(value) != true)) {
                    this.PlayerIdField = value;
                    this.RaisePropertyChanged("PlayerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayerNaam {
            get {
                return this.PlayerNaamField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerNaamField, value) != true)) {
                    this.PlayerNaamField = value;
                    this.RaisePropertyChanged("PlayerNaam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Verloren {
            get {
                return this.VerlorenField;
            }
            set {
                if ((this.VerlorenField.Equals(value) != true)) {
                    this.VerlorenField = value;
                    this.RaisePropertyChanged("Verloren");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Wachtwoord {
            get {
                return this.WachtwoordField;
            }
            set {
                if ((object.ReferenceEquals(this.WachtwoordField, value) != true)) {
                    this.WachtwoordField = value;
                    this.RaisePropertyChanged("Wachtwoord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lobby", Namespace="http://schemas.datacontract.org/2004/07/SilverlightApplication1.Web.DTO")]
    public partial class Lobby : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool CanJoinLobbyField;
        
        private string HostPlayerField;
        
        private System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.GanzenbordServiceSpel.Player> PlayersInLobbyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanJoinLobby {
            get {
                return this.CanJoinLobbyField;
            }
            set {
                if ((this.CanJoinLobbyField.Equals(value) != true)) {
                    this.CanJoinLobbyField = value;
                    this.RaisePropertyChanged("CanJoinLobby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostPlayer {
            get {
                return this.HostPlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.HostPlayerField, value) != true)) {
                    this.HostPlayerField = value;
                    this.RaisePropertyChanged("HostPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.GanzenbordServiceSpel.Player> PlayersInLobby {
            get {
                return this.PlayersInLobbyField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersInLobbyField, value) != true)) {
                    this.PlayersInLobbyField = value;
                    this.RaisePropertyChanged("PlayersInLobby");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GanzenbordServiceSpel.IGanzenbordService")]
    public interface IGanzenbordService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGanzenbordService/DoWork", ReplyAction="http://tempuri.org/IGanzenbordService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGanzenbordService/Gooi", ReplyAction="http://tempuri.org/IGanzenbordService/GooiResponse")]
        System.IAsyncResult BeginGooi(System.AsyncCallback callback, object asyncState);
        
        int EndGooi(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGanzenbordService/Inloggen", ReplyAction="http://tempuri.org/IGanzenbordService/InloggenResponse")]
        System.IAsyncResult BeginInloggen(string naam, string wachtwoord, System.AsyncCallback callback, object asyncState);
        
        SilverlightApplication1.GanzenbordServiceSpel.Player EndInloggen(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGanzenbordService/MaakAccount", ReplyAction="http://tempuri.org/IGanzenbordService/MaakAccountResponse")]
        System.IAsyncResult BeginMaakAccount(string naam, string wachtwoord, System.AsyncCallback callback, object asyncState);
        
        SilverlightApplication1.GanzenbordServiceSpel.Player EndMaakAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGanzenbordService/BeschikbareLobbys", ReplyAction="http://tempuri.org/IGanzenbordService/BeschikbareLobbysResponse")]
        System.IAsyncResult BeginBeschikbareLobbys(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.GanzenbordServiceSpel.Lobby> EndBeschikbareLobbys(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGanzenbordService/MaakLobby", ReplyAction="http://tempuri.org/IGanzenbordService/MaakLobbyResponse")]
        System.IAsyncResult BeginMaakLobby(SilverlightApplication1.GanzenbordServiceSpel.Player player, System.AsyncCallback callback, object asyncState);
        
        SilverlightApplication1.GanzenbordServiceSpel.Player EndMaakLobby(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGanzenbordServiceChannel : SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GooiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GooiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InloggenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InloggenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightApplication1.GanzenbordServiceSpel.Player Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightApplication1.GanzenbordServiceSpel.Player)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MaakAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MaakAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightApplication1.GanzenbordServiceSpel.Player Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightApplication1.GanzenbordServiceSpel.Player)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BeschikbareLobbysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BeschikbareLobbysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.GanzenbordServiceSpel.Lobby> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.GanzenbordServiceSpel.Lobby>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MaakLobbyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MaakLobbyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightApplication1.GanzenbordServiceSpel.Player Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightApplication1.GanzenbordServiceSpel.Player)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GanzenbordServiceClient : System.ServiceModel.ClientBase<SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService>, SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGooiDelegate;
        
        private EndOperationDelegate onEndGooiDelegate;
        
        private System.Threading.SendOrPostCallback onGooiCompletedDelegate;
        
        private BeginOperationDelegate onBeginInloggenDelegate;
        
        private EndOperationDelegate onEndInloggenDelegate;
        
        private System.Threading.SendOrPostCallback onInloggenCompletedDelegate;
        
        private BeginOperationDelegate onBeginMaakAccountDelegate;
        
        private EndOperationDelegate onEndMaakAccountDelegate;
        
        private System.Threading.SendOrPostCallback onMaakAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginBeschikbareLobbysDelegate;
        
        private EndOperationDelegate onEndBeschikbareLobbysDelegate;
        
        private System.Threading.SendOrPostCallback onBeschikbareLobbysCompletedDelegate;
        
        private BeginOperationDelegate onBeginMaakLobbyDelegate;
        
        private EndOperationDelegate onEndMaakLobbyDelegate;
        
        private System.Threading.SendOrPostCallback onMaakLobbyCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public GanzenbordServiceClient() {
        }
        
        public GanzenbordServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GanzenbordServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GanzenbordServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GanzenbordServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<GooiCompletedEventArgs> GooiCompleted;
        
        public event System.EventHandler<InloggenCompletedEventArgs> InloggenCompleted;
        
        public event System.EventHandler<MaakAccountCompletedEventArgs> MaakAccountCompleted;
        
        public event System.EventHandler<BeschikbareLobbysCompletedEventArgs> BeschikbareLobbysCompleted;
        
        public event System.EventHandler<MaakLobbyCompletedEventArgs> MaakLobbyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService.BeginGooi(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGooi(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService.EndGooi(System.IAsyncResult result) {
            return base.Channel.EndGooi(result);
        }
        
        private System.IAsyncResult OnBeginGooi(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService)(this)).BeginGooi(callback, asyncState);
        }
        
        private object[] OnEndGooi(System.IAsyncResult result) {
            int retVal = ((SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService)(this)).EndGooi(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGooiCompleted(object state) {
            if ((this.GooiCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GooiCompleted(this, new GooiCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GooiAsync() {
            this.GooiAsync(null);
        }
        
        public void GooiAsync(object userState) {
            if ((this.onBeginGooiDelegate == null)) {
                this.onBeginGooiDelegate = new BeginOperationDelegate(this.OnBeginGooi);
            }
            if ((this.onEndGooiDelegate == null)) {
                this.onEndGooiDelegate = new EndOperationDelegate(this.OnEndGooi);
            }
            if ((this.onGooiCompletedDelegate == null)) {
                this.onGooiCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGooiCompleted);
            }
            base.InvokeAsync(this.onBeginGooiDelegate, null, this.onEndGooiDelegate, this.onGooiCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService.BeginInloggen(string naam, string wachtwoord, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInloggen(naam, wachtwoord, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightApplication1.GanzenbordServiceSpel.Player SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService.EndInloggen(System.IAsyncResult result) {
            return base.Channel.EndInloggen(result);
        }
        
        private System.IAsyncResult OnBeginInloggen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string naam = ((string)(inValues[0]));
            string wachtwoord = ((string)(inValues[1]));
            return ((SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService)(this)).BeginInloggen(naam, wachtwoord, callback, asyncState);
        }
        
        private object[] OnEndInloggen(System.IAsyncResult result) {
            SilverlightApplication1.GanzenbordServiceSpel.Player retVal = ((SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService)(this)).EndInloggen(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInloggenCompleted(object state) {
            if ((this.InloggenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InloggenCompleted(this, new InloggenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InloggenAsync(string naam, string wachtwoord) {
            this.InloggenAsync(naam, wachtwoord, null);
        }
        
        public void InloggenAsync(string naam, string wachtwoord, object userState) {
            if ((this.onBeginInloggenDelegate == null)) {
                this.onBeginInloggenDelegate = new BeginOperationDelegate(this.OnBeginInloggen);
            }
            if ((this.onEndInloggenDelegate == null)) {
                this.onEndInloggenDelegate = new EndOperationDelegate(this.OnEndInloggen);
            }
            if ((this.onInloggenCompletedDelegate == null)) {
                this.onInloggenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInloggenCompleted);
            }
            base.InvokeAsync(this.onBeginInloggenDelegate, new object[] {
                        naam,
                        wachtwoord}, this.onEndInloggenDelegate, this.onInloggenCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService.BeginMaakAccount(string naam, string wachtwoord, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMaakAccount(naam, wachtwoord, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightApplication1.GanzenbordServiceSpel.Player SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService.EndMaakAccount(System.IAsyncResult result) {
            return base.Channel.EndMaakAccount(result);
        }
        
        private System.IAsyncResult OnBeginMaakAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string naam = ((string)(inValues[0]));
            string wachtwoord = ((string)(inValues[1]));
            return ((SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService)(this)).BeginMaakAccount(naam, wachtwoord, callback, asyncState);
        }
        
        private object[] OnEndMaakAccount(System.IAsyncResult result) {
            SilverlightApplication1.GanzenbordServiceSpel.Player retVal = ((SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService)(this)).EndMaakAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMaakAccountCompleted(object state) {
            if ((this.MaakAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MaakAccountCompleted(this, new MaakAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MaakAccountAsync(string naam, string wachtwoord) {
            this.MaakAccountAsync(naam, wachtwoord, null);
        }
        
        public void MaakAccountAsync(string naam, string wachtwoord, object userState) {
            if ((this.onBeginMaakAccountDelegate == null)) {
                this.onBeginMaakAccountDelegate = new BeginOperationDelegate(this.OnBeginMaakAccount);
            }
            if ((this.onEndMaakAccountDelegate == null)) {
                this.onEndMaakAccountDelegate = new EndOperationDelegate(this.OnEndMaakAccount);
            }
            if ((this.onMaakAccountCompletedDelegate == null)) {
                this.onMaakAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMaakAccountCompleted);
            }
            base.InvokeAsync(this.onBeginMaakAccountDelegate, new object[] {
                        naam,
                        wachtwoord}, this.onEndMaakAccountDelegate, this.onMaakAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService.BeginBeschikbareLobbys(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBeschikbareLobbys(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.GanzenbordServiceSpel.Lobby> SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService.EndBeschikbareLobbys(System.IAsyncResult result) {
            return base.Channel.EndBeschikbareLobbys(result);
        }
        
        private System.IAsyncResult OnBeginBeschikbareLobbys(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService)(this)).BeginBeschikbareLobbys(callback, asyncState);
        }
        
        private object[] OnEndBeschikbareLobbys(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.GanzenbordServiceSpel.Lobby> retVal = ((SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService)(this)).EndBeschikbareLobbys(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBeschikbareLobbysCompleted(object state) {
            if ((this.BeschikbareLobbysCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BeschikbareLobbysCompleted(this, new BeschikbareLobbysCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BeschikbareLobbysAsync() {
            this.BeschikbareLobbysAsync(null);
        }
        
        public void BeschikbareLobbysAsync(object userState) {
            if ((this.onBeginBeschikbareLobbysDelegate == null)) {
                this.onBeginBeschikbareLobbysDelegate = new BeginOperationDelegate(this.OnBeginBeschikbareLobbys);
            }
            if ((this.onEndBeschikbareLobbysDelegate == null)) {
                this.onEndBeschikbareLobbysDelegate = new EndOperationDelegate(this.OnEndBeschikbareLobbys);
            }
            if ((this.onBeschikbareLobbysCompletedDelegate == null)) {
                this.onBeschikbareLobbysCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBeschikbareLobbysCompleted);
            }
            base.InvokeAsync(this.onBeginBeschikbareLobbysDelegate, null, this.onEndBeschikbareLobbysDelegate, this.onBeschikbareLobbysCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService.BeginMaakLobby(SilverlightApplication1.GanzenbordServiceSpel.Player player, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMaakLobby(player, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightApplication1.GanzenbordServiceSpel.Player SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService.EndMaakLobby(System.IAsyncResult result) {
            return base.Channel.EndMaakLobby(result);
        }
        
        private System.IAsyncResult OnBeginMaakLobby(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightApplication1.GanzenbordServiceSpel.Player player = ((SilverlightApplication1.GanzenbordServiceSpel.Player)(inValues[0]));
            return ((SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService)(this)).BeginMaakLobby(player, callback, asyncState);
        }
        
        private object[] OnEndMaakLobby(System.IAsyncResult result) {
            SilverlightApplication1.GanzenbordServiceSpel.Player retVal = ((SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService)(this)).EndMaakLobby(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMaakLobbyCompleted(object state) {
            if ((this.MaakLobbyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MaakLobbyCompleted(this, new MaakLobbyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MaakLobbyAsync(SilverlightApplication1.GanzenbordServiceSpel.Player player) {
            this.MaakLobbyAsync(player, null);
        }
        
        public void MaakLobbyAsync(SilverlightApplication1.GanzenbordServiceSpel.Player player, object userState) {
            if ((this.onBeginMaakLobbyDelegate == null)) {
                this.onBeginMaakLobbyDelegate = new BeginOperationDelegate(this.OnBeginMaakLobby);
            }
            if ((this.onEndMaakLobbyDelegate == null)) {
                this.onEndMaakLobbyDelegate = new EndOperationDelegate(this.OnEndMaakLobby);
            }
            if ((this.onMaakLobbyCompletedDelegate == null)) {
                this.onMaakLobbyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMaakLobbyCompleted);
            }
            base.InvokeAsync(this.onBeginMaakLobbyDelegate, new object[] {
                        player}, this.onEndMaakLobbyDelegate, this.onMaakLobbyCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService CreateChannel() {
            return new GanzenbordServiceClientChannel(this);
        }
        
        private class GanzenbordServiceClientChannel : ChannelBase<SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService>, SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService {
            
            public GanzenbordServiceClientChannel(System.ServiceModel.ClientBase<SilverlightApplication1.GanzenbordServiceSpel.IGanzenbordService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginGooi(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Gooi", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGooi(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("Gooi", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInloggen(string naam, string wachtwoord, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = naam;
                _args[1] = wachtwoord;
                System.IAsyncResult _result = base.BeginInvoke("Inloggen", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightApplication1.GanzenbordServiceSpel.Player EndInloggen(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightApplication1.GanzenbordServiceSpel.Player _result = ((SilverlightApplication1.GanzenbordServiceSpel.Player)(base.EndInvoke("Inloggen", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMaakAccount(string naam, string wachtwoord, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = naam;
                _args[1] = wachtwoord;
                System.IAsyncResult _result = base.BeginInvoke("MaakAccount", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightApplication1.GanzenbordServiceSpel.Player EndMaakAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightApplication1.GanzenbordServiceSpel.Player _result = ((SilverlightApplication1.GanzenbordServiceSpel.Player)(base.EndInvoke("MaakAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBeschikbareLobbys(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("BeschikbareLobbys", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.GanzenbordServiceSpel.Lobby> EndBeschikbareLobbys(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.GanzenbordServiceSpel.Lobby> _result = ((System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.GanzenbordServiceSpel.Lobby>)(base.EndInvoke("BeschikbareLobbys", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMaakLobby(SilverlightApplication1.GanzenbordServiceSpel.Player player, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = player;
                System.IAsyncResult _result = base.BeginInvoke("MaakLobby", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightApplication1.GanzenbordServiceSpel.Player EndMaakLobby(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightApplication1.GanzenbordServiceSpel.Player _result = ((SilverlightApplication1.GanzenbordServiceSpel.Player)(base.EndInvoke("MaakLobby", _args, result)));
                return _result;
            }
        }
    }
}
